on:
  release:
    types:
      - published

name: Upload CLI Release Asset

jobs:
  build:
    if: github.event_name == 'release' && startsWith(github.event.release.name, 'cli-')
    name: Upload Release Asset
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      OSNAME: ${{matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'macos' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Build project
        run: |
          cd C
          make cli
          tar -czvf sqlitecloud-${{ github.event.release.name }}-${{ env.OSNAME }}.tar.gz sqlitecloud-cli

      - name: Get release
        id: release
        uses: bruceadams/get-release@v1.2.3
        if: runner.os != 'macOS'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        if: runner.os != 'macOS'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }} 
          asset_path: ./C/sqlitecloud-${{ github.event.release.name }}-${{ env.OSNAME }}.tar.gz
          asset_name: sqlitecloud-${{ github.event.release.name }}-${{ env.OSNAME }}.tar.gz
          asset_content_type: application/zip
          
      - name: Upload binary artifact
        uses: actions/upload-artifact@v2
        if: runner.os == 'macOS'
        with:
          name: sqlitecloud-${{ github.event.release.name }}-${{ env.OSNAME }}.tar.gz
          path: ./C/sqlitecloud-${{ github.event.release.name }}-${{ env.OSNAME }}.tar.gz
          if-no-files-found: error
