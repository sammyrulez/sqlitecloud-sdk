/*! For license information please see sqlitecloud-sdk.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SQLiteCloud=t():e.SQLiteCloud=t()}(this,(()=>(()=>{var e={763:(e,t,s)=>{e.exports=s(542).default},542:(e,t,s)=>{"use strict";s.d(t,{default:()=>R});const r="main WebSocket connection is active.",a="main WebSocket connection has already been created.",n="main WebSocket connection cannot be created because a PubSub WebSocket connection is already active.",i="main WebSocket connection not established. Check your internet connection, project ID and API key.",o="closing of the main WebSocket and PubSub WebSocket started.",u="closing of the main WebSocket started.",c="main WebSocket connection has been closed.",l="closing of the PubSub WebSocket started.",h="PubSub WebSocket connection has been closed.",b="there is no main WebSocket that can be closed.",d="main main WebSocket connection closed by client.",S="PubSub WebSocket main WebSocket connection closed by client.",m="main WebSocket connection not exist.",w="main WebSocket connection error.",g="PubSub WebSocket connection error.",p="CONNECTING",k="OPEN",y="CLOSING",f="CLOSED",P="PubSub WebSocket connection not exist.",C="CONNECTING",E="OPEN",v="CLOSING",W="CLOSED",N="you need to create a main WebSocket connection. Use the connect method.",L="you need to create a main WebSocket connection. Use the connect method.",T={alreadySubscribed:"registration already made to the channel:",errorNoConnection:"you need to create a main WebSocket connection. Use the connect method."},q={missingSubscritption:"it is not possible to unlisten unregistered channel:",errorNoConnection:"you have closed the main WebSocket connection, it is no longer possible to unlisten channels."},O="the request timed out. ID:",x={mandatory:"channelName is mandatory",string:"channelName has to be a string"},M={mandatory:"channelName is mandatory",string:"channelName has to be a string"};class R{#e=null;#t=null;#s=null;#r=null;#a=new Map;#n=new Map;requestTimeout=3e3;filterSentMessages=!1;constructor(e,t,s=null,r=null){this.url=`wss://web1.sqlitecloud.io:8443/api/v1/${e}/ws?apikey=${t}`,this.onError=s,this.onClose=r}setRequestTimeout(e){this.requestTimeout=e}setFilterSentMessages(e){this.filterSentMessages=e}async connect(){if(null!=this.#e)return{status:"error",data:{message:a}};if(null!=this.#t)return{status:"error",data:{message:n}};try{return this.#e=await this.#i(this.url,i),this.#e.addEventListener("error",this.#o),this.#e.addEventListener("close",this.#u),{status:"success",data:{message:r}}}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}close(e=!0){return e?null!==this.#t&&null!==this.#e?(this.#t.close(1e3,S),this.#n=new Map,this.#e.close(1e3,d),{status:"success",data:{message:o}}):null==this.#t&&null!==this.#e?(this.#e.close(1e3,d),{status:"success",data:{message:u}}):null!=this.#t&&null==this.#e?(this.#n=new Map,this.#t.close(1e3,d),{status:"success",data:{message:l}}):{status:"error",data:{message:b}}:e?void 0:null!==this.#e?(this.#e.close(1e3,d),{status:"success",data:{message:u}}):{status:"error",data:{message:b}}}get connectionState(){let e=m,t=-1;if(null!==this.#e)switch(t=this.#e.readyState,t){case 0:e=p;break;case 1:e=k;break;case 2:e=y;break;case 3:e=f;break;default:e=m}return{state:t,description:e}}get pubSubState(){let e=P,t=-1;if(null!==this.#t)switch(t=this.#t.readyState,t){case 0:e=C;break;case 1:e=E;break;case 2:e=v;break;case 3:e=W;break;default:e=P}return{state:t,description:e}}get requestsStackState(){return this.#a}get subscriptionsStackState(){return this.#n}async exec(e){if(null===this.#e)return{status:"error",data:{message:N}};try{return await this.#c({id:this.#l(5),type:"exec",command:e})}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async notify(e,t){if(null===this.#e)return{status:"error",data:{message:L}};try{const s=await this.#c({id:this.#l(5),type:"notify",channel:e,payload:JSON.stringify(t)});if("success"==s.status)return{status:s.status,data:{message:"OK"}};if("error"==s.status)return s}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async listenChannel(e,t){if(null===this.#e)return{status:"error",data:{message:T.errorNoConnection}};try{return await this.#h("listenChannel",e,t)}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async listenTable(e,t){if(null===this.#e)return{status:"error",data:{message:T.errorNoConnection}};try{return await this.#h("listenTable",e,t)}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async unlistenChannel(e){if(null===this.#e)return{status:"error",data:{message:q.errorNoConnection}};try{if(!this.#n.has(e))return{status:"error",data:{message:q.missingSubscritption+" "+e}};console.log("STO PER unlinset il canale "+e);return await this.#h("unlistenChannel",e,null)}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async unlistenTable(e){if(null===this.#e)return{status:"error",data:{message:q.errorNoConnection}};try{if(!this.#n.has(e))return{status:"error",data:{message:q.missingSubscritption+" "+e}};return await this.#h("unlistenTable",e,null)}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async listChannels(){try{return await this.exec("LIST CHANNELS")}catch(e){return{status:"error",data:e}}}async createChannel(e,t=!0){try{if(!e)return{status:"error",data:{message:x.mandatory}};if("string"!=typeof e)return{status:"error",data:{message:x.string}};let s=`CREATE CHANNEL '${e}'`;s=t?s+" IF NOT EXISTS":s;const r=await this.exec(s);if("success"==r.status)return{status:r.status,data:{message:r.data}};if("error"==r.status)return r}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}async removeChannel(e){try{if(!e)return{status:"error",data:{message:M.mandatory}};if("string"!=typeof e)return{status:"error",data:{message:M.string}};let t=`REMOVE CHANNEL '${e}'`;const s=await this.exec(t);if("success"==s.status)return{status:s.status,data:{message:s.data}};if("error"==s.status)return s}catch(e){return{status:"error",data:{message:e.toString(),error:e}}}}#l(e=5){for(var t="",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=s.length,a=0;a<e;a++)t+=s.charAt(Math.floor(Math.random()*r));return t}#i(e,t){return new Promise(((s,r)=>{var a=new WebSocket(e);a.onopen=function(){s(a)},a.onerror=function(e){r({err:e,message:t})}}))}#u=e=>{null!==this.onClose&&(this.onClose(c),this.#e.removeEventListener("close",this.#u),this.#e.removeEventListener("error",this.#o),this.#e=null)};#o=e=>{null!==this.onError&&this.onError(e,w)};#b=e=>{null!==this.onClose&&(this.onClose(h),this.#t.removeEventListener("close",this.#b),this.#t.removeEventListener("error",this.#d),this.#r=null,this.#t=null)};#d=e=>{null!==this.onError&&this.onError(e,g)};async#h(e,t,s){if(null!==s){if(this.#n.has(t))return{status:"warning",data:{message:T.alreadySubscribed+" "+t}};try{let r;"listenChannel"==e&&(r={id:this.#l(5),type:"listen",channel:t.toLowerCase()}),"unlistenChannel"==e&&(r={id:this.#l(5),type:"unlisten",channel:t.toLowerCase()}),"listenTable"==e&&(r={id:this.#l(5),type:"listen",table:t.toLowerCase()}),"unlistenTable"==e&&(r={id:this.#l(5),type:"unlisten",table:t.toLowerCase()});const a=await this.#c(r);if(0==this.#n.size&&"success"==a.status){const e=a.data.uuid,r=a.data.secret;try{this.#s=`wss://web1.sqlitecloud.io:8443/api/v1/wspsub?uuid=${e}&secret=${r}`,this.#t=await this.#i(this.#s,"PubSub connection not established"),this.#n.set(t.toLowerCase(),{channel:t.toLowerCase(),callback:s}),this.#r=e,this.#t.addEventListener("message",this.#S),this.#t.addEventListener("error",this.#d),this.#t.addEventListener("close",this.#b)}catch(e){return{status:"error",data:e}}}this.#n.size>0&&"success"==a.status&&this.#n.set(t.toLowerCase(),{channel:t.toLowerCase(),callback:s});let n={};return n.status=a.status,"success"==a.status&&(n.data={},n.data.channel=a.data.channel),"error"==a.status&&(n.data=a.data),n}catch(e){return{status:"error",data:e}}}else try{console.log("sto per chiamare this.#promiseSend");const s=await this.#c({id:this.#l(5),type:e,channel:t.toLowerCase()});return console.log(s),this.#n.delete(t),0==this.#n.size&&(this.#t.removeEventListener("message",this.#S),this.#t.close(1e3,S),this.#t=null),s}catch(e){return{status:"error",data:e}}}#S=e=>{const t=JSON.parse(e.data);const s={channel:t.channel,sender:t.sender,payload:function(e){try{JSON.parse(e)}catch(t){return e}return JSON.parse(e)}(t.payload),ownMessage:this.#r==t.sender};this.filterSentMessages&&this.#r==t.sender||this.#n.get(t.channel).callback(s)};#c(e){console.log("STO PER CHIAMARE this.#ws.send"),this.#e.send(JSON.stringify(e));const t=e.id;return new Promise(((e,s)=>{const r=setTimeout((()=>{this.#m(t)}),this.requestTimeout);this.#a.set(t,{id:t,onRequestTimeout:r,resolve:e,reject:s}),1==this.#a.size&&this.#e.addEventListener("message",this.#w)}))}#w=e=>{const t=JSON.parse(e.data);if(this.#a.has(t.id)){let e={};switch(t.type){case"exec":case"notify":case"unlisten":e={status:t.status,data:t.data};break;default:e=t}this.#a.get(t.id).resolve(e),clearTimeout(this.#a.get(t.id).onRequestTimeout),this.#a.delete(t.id),0==this.#a.size&&this.#e.removeEventListener("message",this.#w)}};#m=e=>{this.#a.has(e)&&(clearTimeout(this.#a.get(e).onRequestTimeout),this.#a.get(e).reject({message:O+" "+e}),this.#a.delete(e),0==this.#a.size&&this.#e.removeEventListener("message",this.#w))}}}},t={};function s(r){var a=t[r];if(void 0!==a)return a.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}return s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s(763)})()));
//# sourceMappingURL=sqlitecloud-sdk.min.js.map