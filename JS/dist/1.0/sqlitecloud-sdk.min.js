/*! For license information please see sqlitecloud-sdk.min.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SQLiteCloud=t():e.SQLiteCloud=t()}(this,(()=>(()=>{var e={763:(e,t,s)=>{e.exports=s(542).default},542:(e,t,s)=>{"use strict";s.d(t,{default:()=>R});const r="webSocket connection is active.",n="webSocket connection has already been created.",a="webSocket connection cannot be created because a pubSub connection is already active.",i="websocket connection not established. Check your internet connection, project ID and API key.",o="closing of the WebSocket and pubSub started.",u="closing of the WebSocket started.",c="webSocket connection has been closed.",l="closing of the pubSub started.",h="pubSub connection has been closed.",b="there is no WebSocket that can be closed.",d="main WebSocket connection closed by client.",S="pubSub WebSocket connection closed by client.",w="websocket connection not exist.",m="websocket connection error.",p="pubSub connection error.",y="CONNECTING",g="OPEN",k="CLOSING",f="CLOSED",C="pubSub connection not exist.",P="CONNECTING",v="OPEN",E="CLOSING",N="CLOSED",L="you need to create a WebSocket connection. Use the connect method.",q="you need to create a WebSocket connection. Use the connect method.",W={alreadySubscribed:"registration already made to the channel:",errorNoConnection:"you need to create a WebSocket connection. Use the connect method."},T={missingSubscritption:"it is not possible to unlisten unregistered channel:",errorNoConnection:"you have closed the WebSocket connection, it is no longer possible to unlisten channels."},O="the request timed out. ID:",x={mandatory:"channelName is mandatory",string:"channelName has to be a string"},M={mandatory:"channelName is mandatory",string:"channelName has to be a string"};class R{#e=null;#t=null;#s=null;#r=null;#n=new Map;#a=new Map;requestTimeout=3e3;filterSentMessages=!1;constructor(e,t,s=null,r=null){this.url=`wss://web1.sqlitecloud.io:8443/api/v1/${e}/ws?apikey=${t}`,this.onError=s,this.onClose=r}setRequestTimeout(e){this.requestTimeout=e}setFilterSentMessages(e){this.filterSentMessages=e}async connect(){if(null!=this.#e)return{status:"warning",data:{message:n}};if(null!=this.#t)return{status:"warning",data:{message:a}};try{return this.#e=await this.#i(this.url,i),this.#e.addEventListener("error",this.#o),this.#e.addEventListener("close",this.#u),{status:"success",data:{message:r}}}catch(e){return{status:"error",data:e}}}close(e=!0){return e?null!==this.#t&&null!==this.#e?(this.#t.close(1e3,S),this.#a=new Map,this.#e.close(1e3,d),{status:"success",data:{message:o}}):null==this.#t&&null!==this.#e?(this.#e.close(1e3,d),{status:"success",data:{message:u}}):null!=this.#t&&null==this.#e?(this.#a=new Map,this.#t.close(1e3,d),{status:"success",data:{message:l}}):{status:"error",data:{message:b}}:e?void 0:null!==this.#e?(this.#e.close(1e3,d),{status:"success",data:{message:u}}):{status:"error",data:{message:b}}}get connectionState(){let e=w;if(null!==this.#e){switch(this.#e.readyState){case 0:e=y;break;case 1:e=g;break;case 2:e=k;break;case 3:e=f;break;default:e=w}}return e}get pubSubState(){let e=C;if(null!==this.#t){switch(this.#t.readyState){case 0:e=P;break;case 1:e=v;break;case 2:e=E;break;case 3:e=N;break;default:e=C}}return e}get requestsStackState(){return this.#n}get subscriptionsStackState(){return this.#a}async exec(e){if(null===this.#e)return{status:"error",data:{message:L}};try{return await this.#c({id:this.#l(5),type:"exec",command:e})}catch(e){return{status:"error",data:e}}}async notify(e,t){if(null===this.#e)return{status:"error",data:{message:q}};try{return await this.#c({id:this.#l(5),type:"notify",channel:e,payload:JSON.stringify(t)})}catch(e){return{status:"error",data:e}}}async listenChannel(e,t){if(null===this.#e)return{status:"error",message:W.errorNoConnection};try{return await this.#h("listenChannel",e,t)}catch(e){return{status:"error",data:e}}}async listenTable(e,t){if(null===this.#e)return{status:"error",message:W.errorNoConnection};try{return await this.#h("listenTable",e,t)}catch(e){return{status:"error",data:e}}}async unlistenChannel(e){if(!this.#a.has(e))return{status:"error",data:{message:T.missingSubscritption+" "+e}};if(null===this.#e)return{status:"error",data:{message:T.errorNoConnection}};try{return await this.#h("unlistenChannel",e,null)}catch(e){return{status:"error",data:e}}}async unlistenTable(e){if(!this.#a.has(e))return{status:"error",data:{message:T.missingSubscritption+" "+e}};if(null===this.#e)return{status:"error",data:{message:T.errorNoConnection}};try{return await this.#h("unlistenTable",e,null)}catch(e){return{status:"error",data:e}}}async listChannels(){try{return await this.exec("LIST CHANNELS")}catch(e){return{status:"error",data:e}}}async createChannel(e,t=!0){try{if(!e)return{status:"error",data:{message:x.mandatory}};if("string"!=typeof e)return{status:"error",data:{message:x.string}};let s=`CREATE CHANNEL '${e}'`;s=t?s+" IF NOT EXISTS":s;return await this.exec(s)}catch(e){return{status:"error",data:e}}}async removeChannel(e){try{if(!e)return{status:"error",data:{message:M.mandatory}};if("string"!=typeof e)return{status:"error",data:{message:M.string}};let t=`REMOVE CHANNEL '${e}'`;return await this.exec(t)}catch(e){return{status:"error",data:e}}}#l(e=5){for(var t="",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",r=s.length,n=0;n<e;n++)t+=s.charAt(Math.floor(Math.random()*r));return t}#i(e,t){return new Promise(((s,r)=>{var n=new WebSocket(e);n.onopen=function(){s(n)},n.onerror=function(e){r({err:e,message:t})}}))}#u=e=>{null!==this.onClose&&(this.onClose(c),this.#e.removeEventListener("close",this.#u),this.#e.removeEventListener("error",this.#o),this.#e=null)};#o=e=>{null!==this.onError&&this.onError(e,m)};#b=e=>{null!==this.onClose&&(this.onClose(h),this.#t.removeEventListener("close",this.#b),this.#t.removeEventListener("error",this.#d),this.#r=null,this.#t=null)};#d=e=>{null!==this.onError&&this.onError(e,p)};async#h(e,t,s){if(null!==s){if(this.#a.has(t))return{status:"warning",data:{message:W.alreadySubscribed+" "+t}};try{let r;"listenChannel"==e&&(r={id:this.#l(5),type:"listen",channel:t.toLowerCase()}),"unlistenChannel"==e&&(r={id:this.#l(5),type:"unlisten",channel:t.toLowerCase()}),"listenTable"==e&&(r={id:this.#l(5),type:"listen",table:t.toLowerCase()}),"unlistenTable"==e&&(r={id:this.#l(5),type:"unlisten",table:t.toLowerCase()});const n=await this.#c(r);if(0==this.#a.size&&"success"==n.status){const e=n.data.uuid,r=n.data.secret;try{this.#s=`wss://web1.sqlitecloud.io:8443/api/v1/wspsub?uuid=${e}&secret=${r}`,this.#t=await this.#i(this.#s,"PubSub connection not established"),this.#a.set(t.toLowerCase(),{channel:t.toLowerCase(),callback:s}),this.#r=e,this.#t.addEventListener("message",this.#S),this.#t.addEventListener("error",this.#d),this.#t.addEventListener("close",this.#b)}catch(e){return{status:"error",data:e}}}this.#a.size>0&&"success"==n.status&&this.#a.set(t.toLowerCase(),{channel:t.toLowerCase(),callback:s});let a={};return a.status=n.status,"success"==n.status&&(a.data={},a.data.channel=n.data.channel),"error"==n.status&&(a.data=n.data),a}catch(e){return{status:"error",data:e}}}else try{const s=await this.#c({id:this.#l(5),type:e,channel:t.toLowerCase()});return this.#a.delete(t),0==this.#a.size&&(this.#t.removeEventListener("message",this.#S),this.#t.close(1e3,S),this.#t=null),s}catch(e){return{status:"error",data:e}}}#S=e=>{const t=JSON.parse(e.data);const s={channel:t.channel,sender:t.sender,payload:function(e){try{JSON.parse(e)}catch(t){return e}return JSON.parse(e)}(t.payload),ownMessage:this.#r==t.sender};this.filterSentMessages&&this.#r==t.sender||this.#a.get(t.channel).callback(s)};#c(e){this.#e.send(JSON.stringify(e));const t=e.id;return new Promise(((e,s)=>{const r=setTimeout((()=>{this.#w(t)}),this.requestTimeout);this.#n.set(t,{id:t,onRequestTimeout:r,resolve:e,reject:s}),1==this.#n.size&&this.#e.addEventListener("message",this.#m)}))}#m=e=>{const t=JSON.parse(e.data);if(this.#n.has(t.id)){let e={};switch(t.type){case"exec":case"notify":case"unlisten":e={status:t.status,data:t.data};break;default:e=t}this.#n.get(t.id).resolve(e),clearTimeout(this.#n.get(t.id).onRequestTimeout),this.#n.delete(t.id),0==this.#n.size&&this.#e.removeEventListener("message",this.#m)}};#w=e=>{this.#n.has(e)&&(clearTimeout(this.#n.get(e).onRequestTimeout),this.#n.get(e).reject({message:O+" "+e}),this.#n.delete(e),0==this.#n.size&&this.#e.removeEventListener("message",this.#m))}}}},t={};function s(r){var n=t[r];if(void 0!==n)return n.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,s),a.exports}return s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s(763)})()));
//# sourceMappingURL=sqlitecloud-sdk.min.js.map